// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: selective_disclosure.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AttributeTemplate;
@class CredentialInfo;
@class CredentialSignature;
@class CredentialSignatureRequest;
@class CredentialTemplate;
@class Predicate;
@class RevealedAttributeInfo;
@class StringToStringPair;
@class TemplatePublicKey;
@class TemplateSecretKey;
@class VerificationRequest;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SelectiveDisclosureRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface SelectiveDisclosureRoot : GPBRootObject
@end

#pragma mark - AttributeTemplate

typedef GPB_ENUM(AttributeTemplate_FieldNumber) {
  AttributeTemplate_FieldNumber_AttributeKeyArray = 1,
};

/**
 * Attribute template data used by selective disclosure solution.
 **/
@interface AttributeTemplate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *attributeKeyArray;
/** The number of items in @c attributeKeyArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attributeKeyArray_Count;

@end

#pragma mark - StringToStringPair

typedef GPB_ENUM(StringToStringPair_FieldNumber) {
  StringToStringPair_FieldNumber_Key = 1,
  StringToStringPair_FieldNumber_Value = 2,
};

/**
 * String to string mapping style pairs used by selective disclosure solution.
 **/
@interface StringToStringPair : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - CredentialTemplate

typedef GPB_ENUM(CredentialTemplate_FieldNumber) {
  CredentialTemplate_FieldNumber_CredentialSchema = 1,
  CredentialTemplate_FieldNumber_CredentialKeyCorrectnessProof = 2,
  CredentialTemplate_FieldNumber_PublicKey = 3,
};

/**
 * Credential template data used by selective disclosure solution.
 **/
@interface CredentialTemplate : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) AttributeTemplate *credentialSchema;
/** Test to see if @c credentialSchema has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialSchema;

@property(nonatomic, readwrite, copy, null_resettable) NSString *credentialKeyCorrectnessProof;

@property(nonatomic, readwrite, strong, null_resettable) TemplatePublicKey *publicKey;
/** Test to see if @c publicKey has been set. */
@property(nonatomic, readwrite) BOOL hasPublicKey;

@end

#pragma mark - TemplatePublicKey

typedef GPB_ENUM(TemplatePublicKey_FieldNumber) {
  TemplatePublicKey_FieldNumber_CredentialPublicKey = 1,
};

/**
 * Template public data used by selective disclosure solution.
 **/
@interface TemplatePublicKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *credentialPublicKey;

@end

#pragma mark - TemplateSecretKey

typedef GPB_ENUM(TemplateSecretKey_FieldNumber) {
  TemplateSecretKey_FieldNumber_CredentialSecretKey = 1,
};

/**
 * Template Secret data used by selective disclosure solution.
 **/
@interface TemplateSecretKey : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *credentialSecretKey;

@end

#pragma mark - CredentialInfo

typedef GPB_ENUM(CredentialInfo_FieldNumber) {
  CredentialInfo_FieldNumber_AttributePairArray = 1,
};

/**
 * Credential information used by selective disclosure solution.
 **/
@interface CredentialInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StringToStringPair*> *attributePairArray;
/** The number of items in @c attributePairArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attributePairArray_Count;

@end

#pragma mark - BlindedCredentialSecret

typedef GPB_ENUM(BlindedCredentialSecret_FieldNumber) {
  BlindedCredentialSecret_FieldNumber_BlindedCredentialSecrets = 1,
  BlindedCredentialSecret_FieldNumber_BlindedCredentialSecretsCorrectnessProof = 2,
};

/**
 * Credential Secret blind factors used by selective disclosure solution.
 **/
@interface BlindedCredentialSecret : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *blindedCredentialSecrets;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blindedCredentialSecretsCorrectnessProof;

@end

#pragma mark - CredentialSignature

typedef GPB_ENUM(CredentialSignature_FieldNumber) {
  CredentialSignature_FieldNumber_CredentialSignature = 1,
  CredentialSignature_FieldNumber_SignatureCorrectnessProof = 2,
};

/**
 * Credential Signature data used by selective disclosure solution.
 **/
@interface CredentialSignature : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *credentialSignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signatureCorrectnessProof;

@end

#pragma mark - Predicate

typedef GPB_ENUM(Predicate_FieldNumber) {
  Predicate_FieldNumber_AttributeName = 1,
  Predicate_FieldNumber_PredicateType = 2,
  Predicate_FieldNumber_Value = 3,
};

/**
 * Predicate rules used by selective disclosure solution.
 **/
@interface Predicate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *attributeName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *predicateType;

@property(nonatomic, readwrite) uint64_t value;

@end

#pragma mark - VerificationRule

typedef GPB_ENUM(VerificationRule_FieldNumber) {
  VerificationRule_FieldNumber_RevealedAttributeArray = 1,
  VerificationRule_FieldNumber_PredicateAttributeArray = 2,
};

/**
 * Verification rules used by selective disclosure solution.
 **/
@interface VerificationRule : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *revealedAttributeArray;
/** The number of items in @c revealedAttributeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger revealedAttributeArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Predicate*> *predicateAttributeArray;
/** The number of items in @c predicateAttributeArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger predicateAttributeArray_Count;

@end

#pragma mark - RevealedAttributeInfo

typedef GPB_ENUM(RevealedAttributeInfo_FieldNumber) {
  RevealedAttributeInfo_FieldNumber_AttrArray = 1,
};

/**
 * Revealed rules used by selective disclosure solution.
 **/
@interface RevealedAttributeInfo : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StringToStringPair*> *attrArray;
/** The number of items in @c attrArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger attrArray_Count;

@end

#pragma mark - CredentialSignatureRequest

typedef GPB_ENUM(CredentialSignatureRequest_FieldNumber) {
  CredentialSignatureRequest_FieldNumber_CredentialInfo = 1,
  CredentialSignatureRequest_FieldNumber_BlindedCredentialSecrets = 2,
  CredentialSignatureRequest_FieldNumber_BlindedCredentialSecretsCorrectnessProof = 3,
};

/**
 * Credential request used by selective disclosure solution.
 **/
@interface CredentialSignatureRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CredentialInfo *credentialInfo;
/** Test to see if @c credentialInfo has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialInfo;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blindedCredentialSecrets;

@property(nonatomic, readwrite, copy, null_resettable) NSString *blindedCredentialSecretsCorrectnessProof;

@end

#pragma mark - VerificationRequest

typedef GPB_ENUM(VerificationRequest_FieldNumber) {
  VerificationRequest_FieldNumber_CredentialTemplate = 1,
  VerificationRequest_FieldNumber_VerificationProof = 2,
  VerificationRequest_FieldNumber_VerificationNonce = 3,
};

/**
 * Verification request used by selective disclosure solution.
 **/
@interface VerificationRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CredentialTemplate *credentialTemplate;
/** Test to see if @c credentialTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialTemplate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verificationProof;

@property(nonatomic, readwrite, copy, null_resettable) NSString *verificationNonce;

@end

#pragma mark - SelectiveDisclosureResult

typedef GPB_ENUM(SelectiveDisclosureResult_FieldNumber) {
  SelectiveDisclosureResult_FieldNumber_CredentialTemplate = 1,
  SelectiveDisclosureResult_FieldNumber_TemplateSecretKey = 2,
  SelectiveDisclosureResult_FieldNumber_CredentialSignature = 3,
  SelectiveDisclosureResult_FieldNumber_Nonce = 4,
  SelectiveDisclosureResult_FieldNumber_CredentialSignatureRequest = 5,
  SelectiveDisclosureResult_FieldNumber_MasterSecret = 6,
  SelectiveDisclosureResult_FieldNumber_CredentialSecretsBlindingFactors = 7,
  SelectiveDisclosureResult_FieldNumber_NonceCredential = 8,
  SelectiveDisclosureResult_FieldNumber_VerificationRequest = 9,
  SelectiveDisclosureResult_FieldNumber_RevealedAttributeInfo = 10,
  SelectiveDisclosureResult_FieldNumber_Result = 11,
};

/**
 * Return data to FFI C interface
 **/
@interface SelectiveDisclosureResult : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CredentialTemplate *credentialTemplate;
/** Test to see if @c credentialTemplate has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialTemplate;

@property(nonatomic, readwrite, strong, null_resettable) TemplateSecretKey *templateSecretKey;
/** Test to see if @c templateSecretKey has been set. */
@property(nonatomic, readwrite) BOOL hasTemplateSecretKey;

@property(nonatomic, readwrite, strong, null_resettable) CredentialSignature *credentialSignature;
/** Test to see if @c credentialSignature has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialSignature;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nonce;

@property(nonatomic, readwrite, strong, null_resettable) CredentialSignatureRequest *credentialSignatureRequest;
/** Test to see if @c credentialSignatureRequest has been set. */
@property(nonatomic, readwrite) BOOL hasCredentialSignatureRequest;

@property(nonatomic, readwrite, copy, null_resettable) NSString *masterSecret;

@property(nonatomic, readwrite, copy, null_resettable) NSString *credentialSecretsBlindingFactors;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nonceCredential;

@property(nonatomic, readwrite, strong, null_resettable) VerificationRequest *verificationRequest;
/** Test to see if @c verificationRequest has been set. */
@property(nonatomic, readwrite) BOOL hasVerificationRequest;

@property(nonatomic, readwrite, strong, null_resettable) RevealedAttributeInfo *revealedAttributeInfo;
/** Test to see if @c revealedAttributeInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRevealedAttributeInfo;

@property(nonatomic, readwrite) BOOL result;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
